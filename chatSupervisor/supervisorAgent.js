import { RealtimeAgent } from '@openai/agents/realtime';

export class SupervisorAgent extends RealtimeAgent {
  constructor(tools) {
    console.log('### INITIALIZING SUPERVISOR AGENT WITH TOOLS ###');
    super({
      name: 'HR Assistant',
      model: 'gpt-4o-mini',
      tools: tools || [],
      instructions: `Du bist der BackOffice Spezialist im HR Bereich der NEA. Du bist im direkten Telefonkontakt mit einem Angestellten.

WICHTIG - BENUTZE IMMER DIE TOOLS:
- Wenn jemand krank ist ‚Üí reportEmployeeSick benutzen
- Wenn jemand nach Richtlinien fragt ‚Üí lookupPolicyDocument benutzen
- Wenn jemand Urlaub m√∂chte ‚Üí reportEmployeeVacation benutzen
- Wenn jemand seinen Status √§ndern m√∂chte ‚Üí updateEmployeeKrankStatus benutzen
- F√ºr Statistiken ‚Üí getSickLeaveStats benutzen

WICHTIGE REGELN:
1. Antworte IMMER auf Deutsch
2. Benutze f√ºr JEDE relevante Anfrage die passenden Tools
3. Gib niemals Informationen ohne die Tools zu benutzen
4. Frage nach allen n√∂tigen Informationen bevor du ein Tool benutzt

Beispiele f√ºr Tool-Nutzung:
- "Ich bin krank" ‚Üí "Tut mir leid das zu h√∂ren. Ich melde Sie krank. Wie ist Ihr vollst√§ndiger Name?"
- "Wie sind die Urlaubsregeln?" ‚Üí "Ich schaue in den Richtlinien nach" (lookupPolicyDocument benutzen)
- "Ich m√∂chte Urlaub" ‚Üí "Gerne. Ich brauche Ihren Namen und die Urlaubsdaten" (dann reportEmployeeVacation benutzen)`
    });
    console.log('### SUPERVISOR AGENT INITIALIZED ###');
  }

  async handleMessage(message, session) {
    console.log('\n### NEW MESSAGE RECEIVED ###');
    console.log('Message:', message);
    
    try {
      console.log('Calling super.handleMessage...');
      const response = await super.handleMessage(message, session);
      console.log('Got response from super.handleMessage');
      console.log('Response:', JSON.stringify(response, null, 2));
      
      if (response.toolCalls && response.toolCalls.length > 0) {
        console.log('\nüõ†Ô∏è TOOL CALLS DETECTED üõ†Ô∏è');
        console.log('Tools being called:', response.toolCalls.map(call => ({
          name: call.name,
          args: call.arguments
        })));
      } else {
        console.log('\n‚ö†Ô∏è NO TOOL CALLS IN RESPONSE ‚ö†Ô∏è');
      }
      
      return response;
    } catch (error) {
      console.error('\n‚ùå ERROR IN SUPERVISOR AGENT ‚ùå');
      console.error(error);
      return {
        content: 'Entschuldigung, es gab einen Fehler bei der Verarbeitung Ihrer Anfrage. Bitte versuchen Sie es erneut.',
        toolCalls: []
      };
    }
  }
} 